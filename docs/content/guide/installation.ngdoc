@ngdoc overview
@name Installation
@description

# Installation

### Installing dependencies

These tools are used during the development of <code>angular-translate</code>, so you should
consider install them on your machine to make sure things work properly.

Please install the following tools:

- [Grunt](http://gruntjs.com)
- [Karma Testrunner](http://karma-runner.github.com/0.8/index.html)
- [Bower](https://github.com/twitter/bower)


### Installing via Bower

You can install a <code>angular-translate</code> package very easily using Bower. After
installing Bower on your machine, simply run:
````
$ bower install angular-translate
````
This will install a package in your configured components folder. You can watch the
bower package repository [here](https://github.com/PascalPrecht/bower-angular-translate).
As you can see, it's pretty much broken down to things that matter. The raw source.
For development as well as production use.

### Installing with Git

If you want to get the source, you can watch right here on GitHub, use Git to clone the
whole repository.
````
$ git clone git://github.com/PascalPrecht/angular-translate.git
````
You now have a full clone of the repository and do with the code what ever the fuck
you want.

### Running provided unit tests

Of course, <code>angular-translate</code> comes with a full featured testsuite which just waits
for you to run them. This is where the Karma testrunner comes in. Navigate to the
folder you cloned the project in and simply run:
````
$ karma start
````
This will start a testrunner which uses the Jasmine testing framework to execute all
provided tests. If everything's green, go ahead. Otherwise, fix it and send a pull
request. Thanks.

### Building from source

Since all tests passed successfully you can now build a development as well as a production
version of the code, just like you get from the bower package. <code>angular-translate</code>
provides a <code>Gruntfile.js</code> files which contains configured tasks you can
run with <code>grunt</code>.

To get a build of <code>angular-translate</code> simply run:
````
$ grunt build
````
This will generate files ready for development and production use in a created <code>dist</code> folder.
Files should look like <code>dist/angular-translate-x.x.x.js</code> and <code>dist/angular-translate-x.x.x.min.js</code>.
